/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.fes;

import javax.swing.JFrame;

/**
 *
 * @author kyle
 */
public class FeatureGUI extends JFrame {
    Client client;
    /**
     * Creates new form mainGUI
     */
    public FeatureGUI(Client client) {
        initComponents();
        this.client = client;
        this.client.setMessageTA(messageTA);
        this.client.startMessagingThread();
        updateUserList();
        this.commandTA.append("Welcome " + this.client.getUsername() + " you are logged in!\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JTabbedPane();
        commandPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        commandTA = new javax.swing.JTextArea();
        enterButton = new javax.swing.JButton();
        commandTF = new javax.swing.JTextField();
        messagePanel = new javax.swing.JPanel();
        messageTF = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        userList = new javax.swing.JComboBox<>();
        refreshButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        messageTA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Exchange System");
        setPreferredSize(new java.awt.Dimension(437, 480));

        commandPanel.setPreferredSize(new java.awt.Dimension(449, 500));

        jScrollPane2.setAutoscrolls(true);

        commandTA.setEditable(false);
        commandTA.setBackground(new java.awt.Color(51, 51, 51));
        commandTA.setColumns(20);
        commandTA.setForeground(new java.awt.Color(255, 255, 255));
        commandTA.setRows(5);
        jScrollPane2.setViewportView(commandTA);

        enterButton.setLabel("Enter");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        commandTF.setText("/command");

        javax.swing.GroupLayout commandPanelLayout = new javax.swing.GroupLayout(commandPanel);
        commandPanel.setLayout(commandPanelLayout);
        commandPanelLayout.setHorizontalGroup(
            commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commandPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addGroup(commandPanelLayout.createSequentialGroup()
                        .addComponent(commandTF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterButton)))
                .addContainerGap())
        );
        commandPanelLayout.setVerticalGroup(
            commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commandPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commandTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterButton))
                .addGap(14, 14, 14))
        );

        main.addTab("Command", commandPanel);

        messagePanel.setToolTipText("");
        messagePanel.setName(""); // NOI18N
        messagePanel.setPreferredSize(new java.awt.Dimension(449, 450));

        messageTF.setText("message");

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setAutoscrolls(true);

        messageTA.setEditable(false);
        messageTA.setBackground(new java.awt.Color(51, 51, 51));
        messageTA.setColumns(20);
        messageTA.setForeground(new java.awt.Color(255, 255, 255));
        messageTA.setRows(5);
        messageTA.setText("Message Here:\n");
        jScrollPane4.setViewportView(messageTA);

        javax.swing.GroupLayout messagePanelLayout = new javax.swing.GroupLayout(messagePanel);
        messagePanel.setLayout(messagePanelLayout);
        messagePanelLayout.setHorizontalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userList, 0, 83, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton)
                .addGap(14, 14, 14))
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );
        messagePanelLayout.setVerticalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        main.addTab("Message", messagePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );

        main.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        if (evt.getActionCommand().equals("Send")) {
            String option = (String) userList.getSelectedItem();
            String message = messageTF.getText();
            
            if (option.equals("Broadcast")) {
                client.broadcast(message);
            } else {
               client.unicast(option, message);
            }
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        if (evt.getActionCommand().equals("Enter")) {
            String[] command = commandTF.getText().split(" ");
            int length = command.length;
            if (command[0].equalsIgnoreCase("/dir")) {
                if (length == 1) {
                    commandTA.append(client.dir(command[0]));
                } else {
                    commandTA.append("\nError: Command parameters do not match or is not allowed.\n");
                }
            } else if (command[0].equalsIgnoreCase("/?")) {
                if (length == 1) {
                    commandTA.append(client.showCommands());
                } else {
                    commandTA.append("\nError: Command parameters do not match or is not allowed.\n");
                }
            } else if (command[0].equalsIgnoreCase("/store")) {
                if (length == 2) {
                    commandTA.append(client.store(command[1]));
                } else {
                    commandTA.append("\nError: Command parameters do not match or is not allowed.\n");
                }
            } else if (command[0].equalsIgnoreCase("/get")) {
                if (length == 2) {
                    commandTA.append(client.get(command[1]));
                } else {
                    commandTA.append("\nError: Command parameters do not match or is not allowed.\n");
                }
            } else if (command[0].equalsIgnoreCase("/leave")) {
                if (length == 1) {
                    commandTA.append(client.leave());
                    System.exit(0);
                } else {
                    commandTA.append("\nError: Command parameters do not match or is not allowed.\n");
                }
            } else {
                commandTA.append("\nError: Command not found.\n");
            }  
        }
    }//GEN-LAST:event_enterActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        if (evt.getActionCommand().equals("Refresh")) {
            updateUserList();
        }
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    private void updateUserList() {
        this.userList.removeAllItems();
        this.userList.addItem("Broadcast");
        
        for (String user : this.client.getConnectedUsers()) {
            this.userList.addItem(user);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel commandPanel;
    private javax.swing.JTextArea commandTA;
    private javax.swing.JTextField commandTF;
    private javax.swing.JButton enterButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane main;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JTextArea messageTA;
    private javax.swing.JTextField messageTF;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton sendButton;
    private javax.swing.JComboBox<String> userList;
    // End of variables declaration//GEN-END:variables
}
